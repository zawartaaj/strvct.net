
-- move setEventListenersDict to map
-- move gestureRecognizers to map
- break DomView into chain of subclasses or categories (like Node)



-  move shouldStore to class?

- don't use "root" pid as root object in pool, instead have a root key that returns the root pid 
- don't store App in object pool (for now), instead have it set up and manage the root node

- BMNode: find way to ensure no duplicate subnodes?
- add way to check if hooks have been set up when adding mutation observer
- onInstanceLoadRef is triggering didUpdateSlot -> didMutate -> ObjectPool.onDidMutateObject
-- make sure drag/drop/copy pools don't add themselves to mutation observers <-----------------------------
- cleanup addEventNameAndMethodName

- new Folder tiles don't have editable titles?
== NOTES: NodeFolder has a TitledTile whose titleView requires a double tap to begin editing
== onDoubleTapCancel is being called, appearently by a cancel request from another gesture 
== looks like view has single tap and double tap listeners, and single tap cancels double tap


- rename StackItemSetView to TilesView?
- rename Column to tilesView

- look into removeMutationObserver - do we need weakrefs?

- support css transition events to get callbacks for end of animations


-----------
- remove FieldSetNode
--- then fix import of     "BMDataStoreRecord.js"

- implement newClassSlot (supporting getter and setter creation)

- TODO: remove remaining css files

----
- Fields have key and value, but these should be separated.
-- Still allow RowView class to be customized for value type
 
- replace Field subclasses with Value classes?
-- BMNumberField with NumberValueNode



RowView behavior

- color value outline based on editable

-------------------------------------------------

- move node actions into slot annotation?

- remove BMFieldSetNode and move addFieldNamed and addField use to addSlot with annotations


-- should we support a Object.initAsMixin? How does method overriding order work with Mixins? based on mix order?

- StackNavView controls rendering borders 
-- somehow allow node or subviews to request no border?
--- nodeNavBorderHint?
--- viewNoNavBorderHint?
-- use _nodeColumnStyles?

- think about generic way to attach view attributes (font, colors, padding, etc) to nodes
-- support a shared style but allow user specific override?
-- support inheritance?
-- just use Theme/ElementType/SelectionMode? e.g. DarkTheme, Header1Type

----------------------------------------------

- feature: expand first visible column to fit width of display when too small to fit next 2 columns?
- bug: not clearing next column when removing item that selected it

----------------------------------------------

- cleanup: mutatorMethodNamesSet
-- move into categories? move all mutatorMethodNamesSet declarations into single file?

----------------------------------------------

- rename "Row" to "Item"?
- rename BrowserRow.column to "itemSet?"


BMFolderView?
- can't edit folder names - possible double tap issue?

cleanup:
- BrowserRow
-- move isTapLongPress to a new GestureRecognizer or into DomView?
-- move key modifiers in onTapComplete to GestureRecognizer?
--- rename justTap/justShiftTap/etc to onTap/onShiftTap? Or should diff prefix be used for internally sent events? onLocalTap?

----------------------------------------------

Inline Row views? for Document style rendering

- add BMNode.inlineLevelHint
- have BMNodeView.visibleNodes looks at inlineLevelHint
- add BMNode.subitemsFlattenedToLevel(n)


- want to be able to go from, say, json doc structure to inlined doc e.g. Io guide
- what do we need for that?
- InlinedContainerRowView
- Document (inline container), Section (inline container), Header, Text, Media, References, Links

issues:
- need to be able to option-click inspect
- need within-row selection protocol
- should 

-------------------------------
| InlinedContainerRowView
|  subviews
|
|

- we want to be able to use existing drag and drop between parts of the hierarcy
- what if document not presented subnode hierarchy as flat list of rows <<<<
- these rows have drag UI that supports inserting at a level, perhaps by how far inset they are?
-- two types of rows: grouping rows and and content rows? which have different drop interpretation behaviors
---- content rows always inserted under level of first preceeding grouping row
---- grouping row needs some sort of guideline highlight with snap for drop level?
---- or force UI into non-inline mode for editing and all problems solved except naturalness? 
- maybe after insert, top node figures out and assigns indent level?
- UI to move indent level?

- would also like to keep way of browsing document with normal node structure on small displays
- would need to deal with stack view expectations around node parent chain 


Sites:
- Start converting Io and Dekorte sites to JSON?


Browser:
- need special highlight for end node
- make return act like click if whole column is selected (so we can add node with keyboard?)
-- how to add node from keyboard in non empty column?

Misc:
- use fixed width font on pre text nodes
- make return end editing on node label edits
- can drop nodes into root folder but can't move them out
- cancelling delete on row doesn't reset it's background color
